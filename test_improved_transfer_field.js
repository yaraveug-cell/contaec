/**
 * Test completo del campo Detalle Transferencia mejorado
 * Prueba: ancho duplicado + bot√≥n de ocultar/mostrar
 * Version: 3.0 - Campo mejorado con control de visibilidad
 */

console.log('=== TEST CAMPO DETALLE TRANSFERENCIA MEJORADO ===');

function testImprovedTransferDetailField() {
    console.log('üîç Probando campo mejorado con control de visibilidad...');
    
    try {
        // Verificar que existe el handler
        if (typeof window.TransferDetailHandler === 'undefined') {
            console.error('‚ùå TransferDetailHandler no est√° definido');
            return false;
        }
        
        // Verificar que existe el campo payment_form
        const paymentField = document.querySelector('#id_payment_form');
        if (!paymentField) {
            console.error('‚ùå Campo payment_form no encontrado');
            return false;
        }
        
        console.log('‚úÖ Campo payment_form encontrado');
        
        // Buscar opci√≥n "Transferencia"
        const transferOption = Array.from(paymentField.options).find(option => 
            option.text.toLowerCase().includes('transferencia')
        );
        
        if (!transferOption) {
            console.warn('‚ö†Ô∏è Opci√≥n "Transferencia" no encontrada');
            return false;
        }
        
        console.log('‚úÖ Opci√≥n transferencia encontrada:', transferOption.text);
        
        // Test 1: Crear campo y verificar ancho duplicado
        console.log('\n--- Test 1: Crear campo y verificar ancho ---');
        paymentField.value = transferOption.value;
        paymentField.dispatchEvent(new Event('change', { bubbles: true }));
        
        setTimeout(() => {
            const transferField = document.querySelector('#id_transfer_detail');
            
            if (transferField) {
                const computedStyle = window.getComputedStyle(transferField);
                const width = computedStyle.width;
                
                console.log('‚úÖ Campo creado exitosamente');
                console.log('üìè Ancho del campo:', width);
                console.log('üìè Ancho esperado: ~440px');
                
                if (width === '440px' || parseInt(width) >= 440) {
                    console.log('‚úÖ PERFECTO: Ancho duplicado correctamente');
                } else {
                    console.log('‚ö†Ô∏è Ancho diferente al esperado:', width);
                }
                
                // Test 2: Verificar bot√≥n de ocultar
                console.log('\n--- Test 2: Verificar bot√≥n de control ---');
                const fieldContainer = transferField.parentElement;
                const toggleButton = fieldContainer.querySelector('button');
                
                if (toggleButton) {
                    console.log('‚úÖ Bot√≥n de ocultar encontrado');
                    console.log('üéØ Texto del bot√≥n:', toggleButton.innerHTML);
                    console.log('üéØ T√≠tulo del bot√≥n:', toggleButton.title);
                    
                    // Test 3: Probar funcionalidad de ocultar
                    console.log('\n--- Test 3: Probar ocultar campo ---');
                    toggleButton.click();
                    
                    setTimeout(() => {
                        const isHidden = transferField.style.display === 'none' || 
                                       window.getComputedStyle(transferField).display === 'none';
                        
                        if (isHidden) {
                            console.log('‚úÖ Campo ocultado correctamente por el usuario');
                            console.log('üí° Valor del campo limpiado:', transferField.value === '');
                            
                            // Test 4: Verificar que se puede mostrar de nuevo cambiando forma de pago
                            console.log('\n--- Test 4: Mostrar de nuevo cambiando forma de pago ---');
                            
                            // Cambiar a otra opci√≥n
                            const otherOption = Array.from(paymentField.options).find(option => 
                                !option.text.toLowerCase().includes('transferencia') && option.value !== ''
                            );
                            
                            if (otherOption) {
                                paymentField.value = otherOption.value;
                                paymentField.dispatchEvent(new Event('change', { bubbles: true }));
                                
                                setTimeout(() => {
                                    // Volver a transferencia
                                    paymentField.value = transferOption.value;
                                    paymentField.dispatchEvent(new Event('change', { bubbles: true }));
                                    
                                    setTimeout(() => {
                                        const fieldAfterToggle = document.querySelector('#id_transfer_detail');
                                        const isVisible = fieldAfterToggle && 
                                                        fieldAfterToggle.style.display !== 'none' && 
                                                        window.getComputedStyle(fieldAfterToggle).display !== 'none';
                                        
                                        if (isVisible) {
                                            console.log('‚úÖ Campo se mostr√≥ de nuevo al cambiar forma de pago');
                                            
                                            // Test 5: Probar placeholder mejorado
                                            console.log('\n--- Test 5: Verificar placeholder mejorado ---');
                                            console.log('üìù Placeholder:', fieldAfterToggle.placeholder);
                                            
                                            if (fieldAfterToggle.placeholder.length > 30) {
                                                console.log('‚úÖ Placeholder mejorado para campo m√°s ancho');
                                            }
                                            
                                            // Test 6: Probar funcionalidad completa
                                            fieldAfterToggle.value = 'Banco Pichincha - Cuenta Corriente 1234567890 - Transferencia internacional con c√≥digo SWIFT';
                                            console.log('‚úÖ Valor de prueba largo establecido exitosamente');
                                            
                                            console.log('\nüéâ TODOS LOS TESTS PASARON EXITOSAMENTE');
                                            console.log('üìã Resumen de funcionalidades:');
                                            console.log('  ‚úÖ Ancho duplicado (440px)');
                                            console.log('  ‚úÖ Bot√≥n de ocultar/mostrar');
                                            console.log('  ‚úÖ Placeholder mejorado');
                                            console.log('  ‚úÖ Control de visibilidad por usuario');
                                            console.log('  ‚úÖ Limpieza de datos al ocultar');
                                            console.log('  ‚úÖ Restauraci√≥n al cambiar forma de pago');
                                            
                                        } else {
                                            console.log('‚ùå Campo no se mostr√≥ de nuevo');
                                        }
                                    }, 100);
                                }, 100);
                            }
                            
                        } else {
                            console.log('‚ùå Campo no se ocult√≥ correctamente');
                        }
                    }, 200);
                    
                } else {
                    console.log('‚ùå Bot√≥n de ocultar no encontrado');
                }
                
            } else {
                console.error('‚ùå Campo detalle transferencia no se cre√≥');
            }
        }, 200);
        
        return true;
        
    } catch (error) {
        console.error('‚ùå Error en test:', error);
        return false;
    }
}

// Funci√≥n para test manual del ancho
function testFieldWidth() {
    const field = document.querySelector('#id_transfer_detail');
    if (field) {
        const style = window.getComputedStyle(field);
        console.log('üìè Informaci√≥n de ancho:', {
            width: style.width,
            minWidth: style.minWidth,
            maxWidth: style.maxWidth,
            boxSizing: style.boxSizing
        });
    } else {
        console.log('‚ö†Ô∏è Campo no encontrado. Selecciona "Transferencia" primero.');
    }
}

// Funci√≥n para test manual del bot√≥n
function testToggleButton() {
    const button = document.querySelector('.field-transfer_detail button');
    if (button) {
        console.log('üéØ Informaci√≥n del bot√≥n:', {
            text: button.innerHTML,
            title: button.title,
            visible: button.style.display !== 'none'
        });
        button.click();
        console.log('‚úÖ Bot√≥n clickeado');
    } else {
        console.log('‚ö†Ô∏è Bot√≥n no encontrado. Aseg√∫rate de que el campo est√© visible.');
    }
}

// Ejecutar test cuando la p√°gina est√© lista
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
        setTimeout(testImprovedTransferDetailField, 1500);
    });
} else {
    setTimeout(testImprovedTransferDetailField, 1500);
}

// Funciones disponibles para ejecuci√≥n manual
window.testImprovedTransferDetailField = testImprovedTransferDetailField;
window.testFieldWidth = testFieldWidth;
window.testToggleButton = testToggleButton;

console.log('‚ú® Test mejorado cargado.');
console.log('üîß Funciones disponibles:');
console.log('  - testImprovedTransferDetailField() - Test completo');
console.log('  - testFieldWidth() - Verificar ancho del campo');
console.log('  - testToggleButton() - Probar bot√≥n ocultar/mostrar');